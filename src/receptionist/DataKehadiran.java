package receptionist;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import main.Controller;
import manager.LaporanDataPegawaiForm;
import model.TableModelDataKehadiran;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Riky Setiawan 2013730041 , Sukamto 2013730026
 */
public class DataKehadiran extends javax.swing.JFrame {

    TableModelDataKehadiran tabel;
    Controller cont;
    Statement statement;
    String tanggalHariIni;

    /**
     * Creates new form DataPeserta
     */
    public DataKehadiran(Controller cont) {
        this.cont = cont;
        this.tanggalHariIni = "";
        statement = this.cont.getStatement();
        initComponents();
        this.setLocationRelativeTo(null);
        tabel = new TableModelDataKehadiran();
        this.tabelDataKehadiran.setModel(tabel);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelDataKehadiran = new javax.swing.JTable();
        updateButton = new javax.swing.JButton();
        lihatLaporanButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Melodia Music Lesson");

        logoutButton.setText("Log Out");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Data Kehadiran");

        tabelDataKehadiran.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Peserta", "Tanggal Kursus", "ID Paket", "Status Kehadiran"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelDataKehadiran);

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        lihatLaporanButton.setText("Lihat Laporan");
        lihatLaporanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lihatLaporanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(backButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(61, 61, 61)
                                .addComponent(logoutButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lihatLaporanButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateButton)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logoutButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(lihatLaporanButton))
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setTabel() {
        generateAttendances();
        tabel.clearData();
        try {
            String query = String.format("select COUNT(idSiswa) as jumlahKehadiran from DaftarHadir where tanggal ='%s'", tanggalHariIni);
            ResultSet rs = this.cont.getStatement().executeQuery(query);
            rs.next();
            int size = rs.getInt("jumlahKehadiran");
            if (size > 0) {
                int count = 0;
                String[][] input = new String[size][4];
                query = String.format("select * from DaftarHadir where tanggal ='%s'", tanggalHariIni);
                rs = statement.executeQuery(query);
                while (rs.next()) {
                    input[count][0] = rs.getString("idPeserta");
                    input[count][1] = rs.getString("tanggalKursus");
                    input[count][2] = rs.getString("idPaket");
                    input[count][3] = rs.getBoolean("statusHadir") + "";
                    count++;
                }
                tabel.updateData(input, size);
            }
        } catch (SQLException ex) {
            Logger.getLogger(LaporanDataPegawaiForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void generateAttendances() {
        if (!tanggalHariIni.equals("")) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            tanggalHariIni = sdf.format(new Date());
            String query;
            ResultSet rs;
            try {
                query = String.format("select count(tanggal) as jumlah from DaftarHadir where tanggal = '%s'", tanggalHariIni);
                rs = statement.executeQuery(query);
                int exist = rs.getInt("jumlah");
                if (exist > 0) {
                    Date date = null;
                    date = sdf.parse(tanggalHariIni);
                    DateFormat df = new SimpleDateFormat("EEEE");
                    String hari = df.format(date);
                    String[] idSiswa;
                    String[] idPaket;
                    query = String.format("select count(idSiswa) as jumlah from jadwal inner join siswa on Jadwal.idJadwal = Siswa.idJadwal where hari ='%s'", hari);
                    rs = statement.executeQuery(query);
                    rs.next();
                    int size = rs.getInt("jumlah");
                    if (size > 0) {
                        idPaket = new String[size];
                        idSiswa = new String[size];
                        query = String.format("select Siswa.idSiswa,Siswa.idPaket from jadwal inner join siswa on Jadwal.idJadwal = Siswa.idJadwal where hari ='%s'", hari);
                        rs = statement.executeQuery(query);
                        int i = 0;
                        while (rs.next()) {
                            idSiswa[i] = rs.getString("idSiswa");
                            idPaket[i] = rs.getString("idPaket");
                        }
                        for (int j = 0; j < size; j++) {
                            query = String.format("INSERT INTO DaftarHadir values('%s','%s','%s','false')", idSiswa[j], idPaket[j], tanggalHariIni);
                            statement.execute(query);
                        }
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(DataKehadiran.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(DataKehadiran.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        this.cont.getUpdateKehadiran().setVisible(true);
        this.cont.getUpdateKehadiran().setTanggal();
        this.setVisible(false);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        if (this.cont.getLoggedIn().equalsIgnoreCase("Manager")) {
            this.cont.getHomepageManager().setVisible(true);
        } else {
            this.cont.getHomepageRec().setVisible(true);
        }
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        this.cont.getLogin().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void lihatLaporanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lihatLaporanButtonActionPerformed
        this.cont.getLaporanKehadiran().clear();
        this.cont.getLaporanKehadiran().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lihatLaporanButtonActionPerformed

    public void setTable() {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton lihatLaporanButton;
    private javax.swing.JButton logoutButton;
    private javax.swing.JTable tabelDataKehadiran;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

}
